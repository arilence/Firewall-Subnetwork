#!/usr/bin/env bash

# TODO: Concerns about the allowed TCP/UDP ports. Current way doesn't allow to have ranges

#################################################################################
# USER CONFIGURABLE SECTION ----------------------------------------------------#
#################################################################################
SEARCH_SERVER={{ searchServer }}
NAME_SERVERS="{{ nameServers }}"

IP_OF_OUTBOUND_FIREWALL={{ ipOutboundFirewall }}
IP_OF_INTERNAL_CLIENT={{ ipInternalClient }}
IP_OF_INTERNAL_GATEWAY={{ ipInternalGateway }}
IP_OF_INTERNAL_NETWORK={{{ ipInternalNetwork }}}

EXTERNAL_CARD={{ nameExternalCard }}
INTERNAL_CARD={{ nameInternalCard }}

TCP_ALLOWED_PORTS_IN="{{ tcpAllowedIn }}"
TCP_ALLOWED_PORTS_OUT="{{ tcpAllowedOut }}"

UDP_ALLOWED_PORTS_IN="{{ udpAllowedIn }}"
UDP_ALLOWED_PORTS_OUT="{{ udpAllowedOut }}"

ICMP_ALLOWED_TYPES="{{ icmpAllowed }}"

#################################################################################
# DO NOT EDIT ANYTHING BELOW ---------------------------------------------------#
#################################################################################
firewall() {
  iptables -F
  iptables -t nat -F

  # Make sure that value is equal to 1
  if cat /proc/sys/net/ipv4/ip_forward | grep 0 > /dev/null; then
    echo 1 > /proc/sys/net/ipv4/ip_forward
  fi

  # Setup NAT forwarding for internal clients
  iptables -t nat -A POSTROUTING -j SNAT -o $EXTERNAL_CARD --to-source $IP_OF_OUTBOUND_FIREWALL
  iptables -t nat -A PREROUTING  -j DNAT -i $EXTERNAL_CARD --to $IP_OF_INTERNAL_CLIENT
  ifconfig $INTERNAL_CARD $IP_OF_INTERNAL_GATEWAY/24

  # DROP all traffic that doesn't correspond to any explicit rules
  iptables -P INPUT   DROP
  iptables -P OUTPUT  DROP
  iptables -P FORWARD DROP

  # Some default drop rules
  iptables -A FORWARD -p tcp --match multiport --dports 23,32768:32775,137:139,111,515 -j DROP
  iptables -A FORWARD -p udp --match multiport --dports 32768:32775,137:139            -j DROP

  # Drop packets with source address from the outside that match the internal network
  iptables -A FORWARD -i $EXTERNAL_CARD -s $IP_OF_INTERNAL_NETWORK -j DROP

  # Setup TCP, UDP, and ICMP rules
  for i in $TCP_ALLOWED_PORTS_IN; do
    iptables -A FORWARD  -p tcp -i $EXTERNAL_CARD -o $INTERNAL_CARD --dport $i -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A FORWARD  -p tcp -i $INTERNAL_CARD -o $EXTERNAL_CARD --sport $i -m conntrack --ctstate ESTABLISHED -j ACCEPT
  done

  for i in $TCP_ALLOWED_PORTS_OUT; do
    iptables -A FORWARD  -p tcp -i $INTERNAL_CARD -o $EXTERNAL_CARD --dport $i -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A FORWARD  -p tcp -i $EXTERNAL_CARD -o $INTERNAL_CARD --sport $i -m conntrack --ctstate ESTABLISHED -j ACCEPT
  done

  for i in $UDP_ALLOWED_PORTS_IN; do
    iptables -A FORWARD  -p udp -i $EXTERNAL_CARD -o $INTERNAL_CARD --dport $i -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A FORWARD  -p udp -i $INTERNAL_CARD -o $EXTERNAL_CARD --sport $i -m conntrack --ctstate ESTABLISHED -j ACCEPT
  done

  for i in $UDP_ALLOWED_PORTS_OUT; do
    iptables -A FORWARD  -p udp -i $INTERNAL_CARD -o $EXTERNAL_CARD --dport $i -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables -A FORWARD  -p udp -i $EXTERNAL_CARD -o $INTERNAL_CARD --sport $i -m conntrack --ctstate ESTABLISHED -j ACCEPT
  done

  for i in $ICMP_ALLOWED_TYPES; do
    iptables -A FORWARD -p icmp --icmp-type $i -s $IP_OF_INTERNAL_CLIENT -d 0/0 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    iptables -A FORWARD -p icmp --icmp-type $i -s 0/0 -d $IP_OF_INTERNAL_CLIENT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
  done

  # Mangle Packets for SSH and FTP
  iptables -A PREROUTING -t mangle -p tcp --sport ssh      -j TOS --set-tos Minimize-Delay
  iptables -A PREROUTING -t mangle -p tcp --sport ftp      -j TOS --set-tos Minimize-Delay
  iptables -A PREROUTING -t mangle -p tcp --sport ftp-data -j TOS --set-tos Maximize-Throughput
}

reset() {
  ifconfig $EXTERNAL_CARD up
  route del default gw $IP_OF_INTERNAL_GATEWAY
  fix_network_manager

  iptables -F
  iptables -t nat -F

  iptables -P INPUT   ACCEPT
  iptables -P OUTPUT  ACCEPT
  iptables -P FORWARD ACCEPT
}

fix_network_manager() {
  DATA="# Generated by NetworkManager\nsearch "
  DATA+=$SEARCH_SERVER
  for i in $NAME_SERVERS; do
    DATA+="\nnameserver "
    DATA+=$i
  done

  echo -e $DATA > /etc/resolv.conf
}

client() {
  ifconfig $EXTERNAL_CARD 0.0.0.0 down                  # kills the default card
  ifconfig $INTERNAL_CARD $IP_OF_INTERNAL_CLIENT/24     # enable secondary card
  route add default gw $IP_OF_INTERNAL_GATEWAY

  fix_network_manager
}
